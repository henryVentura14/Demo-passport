{"version":3,"sources":["components/login/login.jsx","components/dash/dash.jsx","App.jsx","serviceWorker.js","index.js"],"names":["className","id","type","name","defaultChecked","htmlFor","action","method","data-type","value","href","width","height","viewBox","fill","fillRule","d","Dash","query","queryString","parse","this","props","location","search","token","window","localStorage","setItem","history","push","Component","withRouter","path","exact","render","to","component","Login","Boolean","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da6f925c.chunk.js","sourcesContent":["import React from 'react';\nimport './login.css';\nexport default () => {\n    return (\n        <div>\n            <div className=\"login-wrap\">\n                <div className=\"login-html\">\n                    <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in\" defaultChecked />\n                    <label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\n                    <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up\" />\n                    <label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\n                    <div className=\"login-form\">\n                        <form action=\"http://localhost:4500/login\" method=\"post\" className=\"sign-in-htm\">\n                            <div className=\"group\">\n                                <label htmlFor=\"userin\" className=\"label\">Username</label>\n                                <input id=\"userin\" name=\"username\" type=\"text\" className=\"input\" />\n                            </div>\n                            <div className=\"group\">\n                                <label htmlFor=\"passin\" className=\"label\">Password</label>\n                                <input id=\"passin\" name=\"password\" type=\"password\" className=\"input\" data-type=\"password\" />\n                            </div>\n                            <div className=\"group\">\n                                <input id=\"check\" type=\"checkbox\" className=\"check\" defaultChecked />\n                                <label htmlFor=\"check\">\n                                    <span className=\"icon\"></span>Keep me Signed in\n                              </label>\n                            </div>\n                            <div className=\"group\">\n                                <input type=\"submit\" className=\"button\" value=\"Sign In\" />\n                            </div>\n                            <div className=\"hr\"></div>\n                            <div className=\"foot-lnk\">\n                                <a href=\"http://localhost:4500/auth/google\" className=\"btn\">\n                                    <div>\n                                        <span className=\"svgIcon t-popup-svg\">\n                                            <svg\n                                                className=\"svgIcon-use\"\n                                                width=\"25\"\n                                                height=\"37\"\n                                                viewBox=\"0 0 25 25\"\n                                            >\n                                                <g fill=\"none\" fillRule=\"evenodd\">\n                                                    <path\n                                                        d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\"\n                                                        fill=\"#4285F4\"\n                                                    />\n                                                    <path\n                                                        d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\"\n                                                        fill=\"#34A853\"\n                                                    />\n                                                    <path\n                                                        d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\"\n                                                        fill=\"#FBBC05\"\n                                                    />\n                                                    <path\n                                                        d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\"\n                                                        fill=\"#EA4335\"\n                                                    />\n                                                </g>\n                                            </svg>\n                                        </span>\n                                        <span className=\"button-label\">Sign in with Google</span>\n                                    </div>\n                                </a>\n                            </div>\n                        </form>\n                        <form className=\"sign-up-htm\">\n                            <div className=\"group\">\n                                <label htmlFor=\"userup\" className=\"label\">Username</label>\n                                <input id=\"userup\" type=\"text\" className=\"input\" />\n                            </div>\n                            <div className=\"group\">\n                                <label htmlFor=\"passup\" className=\"label\">Password</label>\n                                <input id=\"passup\" type=\"password\" className=\"input\" data-type=\"password\" />\n                            </div>\n                            <div className=\"group\">\n                                <label htmlFor=\"passup2\" className=\"label\">Repeat Password</label>\n                                <input id=\"passup2\" type=\"password\" className=\"input\" data-type=\"password\" />\n                            </div>\n                            <div className=\"group\">\n                                <label htmlFor=\"email\" className=\"label\">Email Address</label>\n                                <input id=\"email\" type=\"email\" className=\"input\" />\n                            </div>\n                            <div className=\"group\">\n                                <input type=\"submit\" className=\"button\" value=\"Sign Up\" />\n                            </div>\n                            <div className=\"hr\"></div>\n                            <div className=\"foot-lnk\">\n                                <label htmlFor=\"tab-1\">Already Member?</label>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport './dash.css';\nimport queryString from 'query-string'\n\nclass Dash extends Component {\n\n    componentDidMount() {\n        let query = queryString.parse(this.props.location.search)\n        if (query.token) {\n            window.localStorage.setItem('jwt', query.token)\n            this.props.history.push('/dash')\n        } else {\n            this.props.history.push('/login')\n        }\n    }\n    render() {\n        return (\n            <div className=\"bg\">\n                <div className=\"the-container\">\n                    <input className=\"input2\" type=\"checkbox\" id=\"toggle\" />\n                    <label className=\"label2\" htmlFor=\"toggle\"></label>\n                    <div className=\"day-night-cont\">\n                        <span className=\"the-sun\"></span>\n                        <div className=\"the-moon\"><span className=\"moon-inside\"></span></div>\n                    </div>\n                    <div className=\"switch\">\n                        <div className=\"button\">\n                            <div className=\"b-inside\"></div>\n                        </div>\n                    </div>\n                    <div className=\"c-window\">\n                        <span className=\"the-sun\"></span>\n                        <span className=\"the-moon\"></span>\n                        <div className=\"the-fox\">\n                            <div className=\"fox-face\">\n                                <section className=\"eyes left\"></section>\n                                <section className=\"eyes right\"></section>\n                                <span className=\"nose\"></span>\n                                <div className=\"white-part\"><span className=\"mouth\"></span></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <input type=\"checkbox\" id=\"check\" />\n                <label htmlFor=\"check\">\n                    <i className=\"fas fa-bars\" id=\"btn\"></i>\n                    <i className=\"fas fa-times\" id=\"cancel\"></i>\n                </label>\n                <div className=\"sidebar\">\n                    <ul>\n                        <li><a href=\"!#\"><i className=\"fas fa-qrcode\"></i>Dashboard</a></li>\n                        <li><a href=\"/\"><i className=\"fas fa-window-close\"></i>Sign Out</a></li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Dash)\n\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\nimport './App.css'\nimport Login from './components/login/login'\nimport Dash from './components/dash/dash'\n\nconst App = () => {\n  return (\n    <div>\n      <Router >\n        <Route path='/' exact render={() => <Redirect to='/login' />} />\n        <Route path='/login' exact component={Login} />\n        <Route path='/dash' exact component={Dash} />\n      </Router>\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\n\nimport * as serviceWorker from './serviceWorker'\nimport { Route, Switch } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path='/' component={App} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}